name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Install uniffi-bindgen-cs
      if: matrix.os == 'ubuntu-latest'
      run: cargo install uniffi-bindgen-cs --git https://github.com/NordSecurity/uniffi-bindgen-cs --tag v0.8.0+v0.25.0
    - name: Build default target
      run: |
        cd strathweb-phi-engine
        cargo build --release 
        
    - name: Upload default artifacts
      uses: actions/upload-artifact@v3
      with:
         name: native-library
         path: |
           strathweb-phi-engine/target/release/*.so
           strathweb-phi-engine/target/release/*.dylib
           strathweb-phi-engine/target/release/*.dll
    
    - name: Upload bindings
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
         name: language-bindings
         path: |
           strathweb-phi-engine/bindings/*.*


  build-swift:
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v3
    - name: Install Rust targets
      run: |
        rustup target add aarch64-apple-ios
        rustup target add aarch64-apple-ios-sim
        rustup target add aarch64-apple-darwin
    - name: Install uniffi-bindgen-cs
      run: cargo install uniffi-bindgen-cs --git https://github.com/NordSecurity/uniffi-bindgen-cs --tag v0.8.0+v0.25.0
    - name: Build XCFramework
      run: ./build-xcframework.sh
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: strathweb_phi_engine_framework.xcframework
        path: artifacts/swift/strathweb_phi_engine_framework.xcframework
