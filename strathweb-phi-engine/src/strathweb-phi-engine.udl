namespace strathweb_phi_engine {
};

dictionary InferenceOptions {
	u16 token_count;
	f64 temperature;
	f64? top_p;
	u64? top_k;
    f32 repeat_penalty;
	u16 repeat_last_n;
	u64 seed;
};

dictionary EngineOptions {
    string cache_dir;
    string? system_instruction;
    string? tokenizer_repo;
    string? model_repo;
    string? model_file_name;
    string? model_revision;
    boolean use_flash_attention;
    u16? context_window;
};

dictionary InferenceResult {
    string result_text;
    u16 token_count;
    f64 duration;
	f64 tokens_per_second;
};

dictionary HistoryEntry {
    Role role;
    string text;
};

interface PhiEngine {
    [Throws=PhiError]
    constructor(EngineOptions engine_options, BoxedPhiEventHandler event_handler);

    [Throws=PhiError]
    InferenceResult run_inference(string prompt_text, [ByRef]InferenceOptions inference_options);
    
    [Throws=PhiError]
    void clear_history();

    [Throws=PhiError]
    sequence<HistoryEntry> get_history();
};

enum Role {
    "Assistant",
    "User",
};

callback interface PhiEventHandler {
    [Throws=PhiError]
    void on_model_loaded();

    [Throws=PhiError]
    void on_inference_token(string token);
};

interface BoxedPhiEventHandler {
    constructor(PhiEventHandler handler);
};

[Error]
interface PhiError {
    InitalizationError(string error_text);
    InferenceError(string error_text);
    HistoryError(string error_text);
};